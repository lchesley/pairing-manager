using ParingManager.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ParingManager.Models
{
    public class CharacterModel
    {
        List<Character> characters;
        public ClassModel classes;        

        public CharacterModel()
        {
            characters = new List<Character>();
            classes = new ClassModel();

            LoadCharacters();
        }

        public Character GetCharacterByCharacterName(string name)
        {
            return characters.Where(o => o.Name == name).FirstOrDefault();
        }

        public List<string> GetCharacterNames()
        {
            List<string> list = new List<string>();

            list = characters.OrderBy(o => o.Name).Select(o => o.Name).ToList<string>();

            return list;
        }

        private void LoadCharacters()
        {
            List<Character> list = new List<Character>();

            list.Add(new Parent { Name = CharacterNames.Avatar, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.Supportive), StartingClass = classes.GetClassByClassName(ClassNames.DarkPrincess), AlternateClass = new BaseClass(), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), FriendshipSupportList = "", FriendshipSupports = new List<Character>(), RomanticSupportsList = "", RomanticSupports = new List<Character>(), AvailableChildName = CharacterNames.Kana, AvailableChild = new Child() });
            list.Add(new Child { Name = CharacterNames.Kana, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.DraconicHex), StartingClass = classes.GetClassByClassName(ClassNames.DarkPrincess), AlternateClass = new BaseClass(), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), RomanticSupports = new List<Character>(), RomanticSupportsList = "", FriendshipSupports = new List<Character>(), FriendshipSupportList = "", PrimaryParent = GetCharacterByCharacterName(CharacterNames.Avatar), PrimaryParentName = "Avatar" });
            list.Add(new Parent { Name = CharacterNames.Azura, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.HealingDescant), StartingClass = classes.GetClassByClassName(ClassNames.Songstress), AlternateClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Troubadour), InheritanceB = classes.GetClassByClassName(ClassNames.WyvernRider), AvailableChild = new Child(), AvailableChildName = CharacterNames.Shigure, FriendshipSupportList = "Hinoka, Sakura, Elise, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Arthur, Benny, Keaton, Laslow, Leo, Niles, Odin, Xander, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Felicia, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.DevotedPartner), StartingClass = classes.GetClassByClassName(ClassNames.Troubadour), AlternateClass = classes.GetClassByClassName(ClassNames.Mercenary), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = classes.GetClassByClassName(ClassNames.Samurai), FriendshipSupportList = "Hana, Peri, Flora, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Takumi, Arthur, Benny, Keaton, Laslow, Leo, Niles, Odin, Xander, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Jakob, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.EvasivePartner), StartingClass = classes.GetClassByClassName(ClassNames.Troubadour), AlternateClass = classes.GetClassByClassName(ClassNames.Cavelier), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = classes.GetClassByClassName(ClassNames.Ninja), FriendshipSupportList = "Takumi, Avatar, Gunter, Silas", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinkoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Beruka, Camilla, Charlotte, Effie, Elise, Nyx, Peri, Selena, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>(), AvailableChild = new Child(), AvailableChildName = CharacterNames.Dwyer });
            list.Add(new Child { Name = CharacterNames.Dwyer, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.BornSteward), StartingClass = classes.GetClassByClassName(ClassNames.Troubadour), AlternateClass = classes.GetClassByClassName(ClassNames.Cavelier), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), FriendshipSupportList = "Asugi, Kiragi, Percy, Avatar, Jakob", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Caeldori, Mitama, Rhajat, Selkie, Nina, Ophelia, Soliel, Velouria, Avatar, Kana, Sophie, Midori", RomanticSupports = new List<Character>(), PrimaryParent = new Parent(), PrimaryParentName = CharacterNames.Jakob });
            list.Add(new Parent { Name = CharacterNames.Kaze, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.MiraculousSave), StartingClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Cavelier), InheritanceB = classes.GetClassByClassName(ClassNames.Mercenary), AvailableChildName = "Midori", AvailableChild = new Child(), FriendshipSupportList = "Saizo, Xander, Avatar, Silas", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Beruka, Camilla, Charlotte, Effie, Elise, Nyx, Peri, Selena, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Midori, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.LuckyCharm), StartingClass = classes.GetClassByClassName(ClassNames.Apothecary), AlternateClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Kaze, PrimaryParent = new Parent(), FriendshipSupportList = "Selkie, Ophelia, Avatar, Kana", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Asugi, Hisame, Kiragi, Shiro, Forrest, Ignatius, Percy, Siegbert, Avatar, Kana, Dwyer, Shigure", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Shigure, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.PerfectPitch), StartingClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClass = classes.GetClassByClassName(ClassNames.Troubadour), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Azura, PrimaryParent = new Parent(), FriendshipSupportList = "Hisame, Forrest, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Caeldori, Mitama, Rhajat, Selkie, Nina, Ophelia, Soliel, Velouria, Avatar, Kana, Sophie, Midori", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Silas, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.VowOfFriendship), StartingClass = classes.GetClassByClassName(ClassNames.Cavelier), AlternateClass = classes.GetClassByClassName(ClassNames.Mercenary), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Ninja), InheritanceB = classes.GetClassByClassName(ClassNames.Samurai), AvailableChildName = CharacterNames.Sophie, AvailableChild = new Child(), FriendshipSupportList = "Ryoma, Avatar, Jakob, Kaze", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Beruka, Camilla, Charlotte, Effie, Elise, Nyx, Peri, Selena, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Sophie, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.Mischievous), StartingClass = classes.GetClassByClassName(ClassNames.Cavelier), AlternateClass = classes.GetClassByClassName(ClassNames.Mercenary), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Silas, PrimaryParent = new Parent(), FriendshipSupportList = "Caeldori, Soleil, Velouria, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Asugi, Hisame, Kiragi, Shiro, Forrest, Ignatius, Percy, Siegbert, Avatar, Kana, Dwyer, Shigure", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Shura, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.Highwayman), StartingClass = classes.GetClassByClassName(ClassNames.Outlaw), AlternateClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Fighter), InheritanceB = new BaseClass(), FriendshipSupportList = CharacterNames.Avatar, FriendshipSupports = new List<Character>(), RomanticSupportsList = CharacterNames.Avatar, RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Mozu, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.Forager), StartingClass = classes.GetClassByClassName(ClassNames.Villager), AlternateClass = classes.GetClassByClassName(ClassNames.Archer), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Apothecary), InheritanceB = classes.GetClassByClassName(ClassNames.Outlaw), FriendshipSupportList = "Oboro, Effie, Nyx, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Arthur, Benny, Keaton, Laslow, Leo, Odin, Niles, Xander, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>()});
            list.Add(new Character { Name = CharacterNames.Scarlet, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.InExtremis), StartingClass = classes.GetClassByClassName(ClassNames.WyvernRider), AlternateClass = classes.GetClassByClassName(ClassNames.Outlaw), AlternateClassB = classes.GetClassByClassName(ClassNames.Knight), InheritanceA = classes.GetClassByClassName(ClassNames.SkyKnight), InheritanceB = classes.GetClassByClassName(ClassNames.SpearFighter), FriendshipSupportList = CharacterNames.Avatar, FriendshipSupports = new List<Character>(), RomanticSupportsList = CharacterNames.Avatar, RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Izana, AvailableOn = Path.All, PersonalSkill = classes.GetSkillByName(SkillNames.Peacebringer), StartingClass = classes.GetClassByClassName(ClassNames.Monk), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = classes.GetClassByClassName(ClassNames.Apothecary), InheritanceA = new BaseClass(), InheritanceB = classes.GetClassByClassName(ClassNames.Mercenary), FriendshipSupportList = CharacterNames.Avatar, FriendshipSupports = new List<Character>(), RomanticSupportsList = CharacterNames.Avatar, RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Rinkah, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.FieryBlood), StartingClass = classes.GetClassByClassName(ClassNames.OniSavage), AlternateClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Fighter), InheritanceB = classes.GetClassByClassName(ClassNames.Cavelier), FriendshipSupportList = "Kagero, Oboro, Orochi, Charlotte, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Benny, Keaton, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Sakura, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.QuietStrength), StartingClass = classes.GetClassByClassName(ClassNames.ShrineMaiden), AlternateClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = classes.GetClassByClassName(ClassNames.WyvernRider), FriendshipSupportList = "Hana, Hinoka, Elise, Avatar, Azura", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Saizo, Subaki, Leo, Xander, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Hana, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.FearsomeBlow), StartingClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClass = classes.GetClassByClassName(ClassNames.ShrineMaiden), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Mercenary), InheritanceB = new BaseClass(), FriendshipSupportList = "Sakura, Setsuna, Effie, Avatar, Felicia", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Keaton, Laslow, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Subaki, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Perfectionist), StartingClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.WyvernRider), InheritanceB = classes.GetClassByClassName(ClassNames.Mercenary), AvailableChildName = CharacterNames.Caeldori, AvailableChild = new Child(), FriendshipSupportList = "Azama, Hinata, Saizo, Niles, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Selena, Nyx, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Caeldori, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Prodigy), StartingClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Subaki, PrimaryParent = new Parent(), FriendshipSupportList = "Mitama, Rhajat, Nina, Avatar, Sophie", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Asugi, Hisame, Kiragi, Shiro, Ignatius, Siegbert, Avatar, Kana, Dwyer, Shigure", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Saizo, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Pyrotechnics), StartingClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Cavelier), InheritanceB = classes.GetClassByClassName(ClassNames.Mercenary), AvailableChildName = CharacterNames.Asugi, AvailableChild = new Child(), FriendshipSupportList = "Ryoma, Subaki, Laslow, Avatar, Kaze", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Beruka, Charlotte, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Asugi, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.SweetTooth), StartingClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Saizo, PrimaryParent = new Parent(), FriendshipSupportList = "Hisame, Shiro, Ignatius, Avatar, Dwyer", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Caeldori, Mitama, Rhajat, Selkie, Nina, Soliel, Avatar, Kana, Midori, Sophie", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Orochi, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Capture), StartingClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClass = classes.GetClassByClassName(ClassNames.Apothecary), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.DarkMage), InheritanceB = new BaseClass(), FriendshipSupportList = "Kagero, Oboro, Rinkah, Nyx, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Laslow, Odin, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Hinoka, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.RallyingCry), StartingClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClass = classes.GetClassByClassName(ClassNames.SpearFighter), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.WyvernRider), InheritanceB = classes.GetClassByClassName(ClassNames.Knight), FriendshipSupportList = "Sakura, Setsuna, Camilla, Avatar, Azura", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hinata, Kaden, Saizo, Subaki, Hayato, Leo, Xander, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Azama, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.DivineRetribution), StartingClass = classes.GetClassByClassName(ClassNames.Monk), AlternateClass = classes.GetClassByClassName(ClassNames.Apothecary), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), AvailableChildName = CharacterNames.Mitama, AvailableChild = new Child(), FriendshipSupportList = "Hayato, Kaden, Subaki, Arthur, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Beruka, Effie, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Mitama, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Haiku), StartingClass = classes.GetClassByClassName(ClassNames.ShrineMaiden), AlternateClass = classes.GetClassByClassName(ClassNames.Apothecary), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Azama, PrimaryParent = new Parent(), FriendshipSupportList = "Caeldori, Rhajat, Soleil, Avatar, Kana", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Asugi, Hisame, Kiragi, Shiro, Percy, Siegbert, Avatar, Kana, Dwyer, Shigure", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Setsuna, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Optimistic), StartingClass = classes.GetClassByClassName(ClassNames.Archer), AlternateClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Outlaw), InheritanceB = classes.GetClassByClassName(ClassNames.Cavelier), FriendshipSupportList = "Hana, Hinoka, Kagero, Selena, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Arthur, Niles, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Hayato, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Pride), StartingClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClass = classes.GetClassByClassName(ClassNames.OniSavage), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.DarkMage), InheritanceB = classes.GetClassByClassName(ClassNames.Fighter), AvailableChildName = CharacterNames.Rhajat, AvailableChild = new Child(), FriendshipSupportList = "Azama, Kaden, Benny, Fuga, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Effie, Nyx, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Rhajat, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Vendetta), StartingClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClass = classes.GetClassByClassName(ClassNames.OniSavage), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Hayato, PrimaryParent = new Parent(), FriendshipSupportList = "Caeldori, Mitama, Selkie, Ophelia", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Asugi, Hisame, Kiragi, Shiro, Forrest, Percy, Avatar, Kana, Dwyer, Shigure", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Oboro, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.NohrEnmity), StartingClass = classes.GetClassByClassName(ClassNames.SpearFighter), AlternateClass = classes.GetClassByClassName(ClassNames.Apothecary), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Knight), InheritanceB = new BaseClass(), FriendshipSupportList = "Orochi, Rinkah, Beruka, Avatar, Mozu", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Benny, Niles, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Hinata, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.TripleThreat), StartingClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClass = classes.GetClassByClassName(ClassNames.OniSavage), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Mercenary), InheritanceB = classes.GetClassByClassName(ClassNames.Fighter), AvailableChildName = CharacterNames.Hisame, AvailableChild = new Child(), FriendshipSupportList = "Kaden, Subaki, Takumi, Odin, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Selena, Peri, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Hisame, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Calm), StartingClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClass = classes.GetClassByClassName(ClassNames.OniSavage), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Hinata, PrimaryParent = new Parent(), FriendshipSupportList = "Asugi, Kiragi, Percy, Avatar, Kana, Shigure", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Caeldori, Mitama, Rhajat, Selkie, Ophelia, Velouria, Avatar, Kana, Midori, Sophie", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Takumi, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Competitive), StartingClass = classes.GetClassByClassName(ClassNames.Archer), AlternateClass = classes.GetClassByClassName(ClassNames.SpearFighter), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Outlaw), InheritanceB = classes.GetClassByClassName(ClassNames.Knight), AvailableChildName = CharacterNames.Kiragi, AvailableChild = new Child(), FriendshipSupportList = "Hinata, Ryoma, Leo, Avatar, Jakob", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Kagero, Oboro, Orochi, Rinkah, Setsuna, Camilla, Elise, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Kiragi, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Optimist), StartingClass = classes.GetClassByClassName(ClassNames.Archer), AlternateClass = classes.GetClassByClassName(ClassNames.SpearFighter), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Takumi, PrimaryParent = new Parent(), FriendshipSupportList = "Hisame, Shiro, Forrest, Avatar, Dwyer", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Caeldori, Mitama, Rhajat, Selkie, Soliel, Velouria, Avatar, Kana, Midori, Sophie", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Kagero, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.ShurikenMastery), StartingClass = classes.GetClassByClassName(ClassNames.Ninja), AlternateClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Cavelier), InheritanceB = classes.GetClassByClassName(ClassNames.DarkMage), FriendshipSupportList = "Orochi, Rinkah, Setsuna, Peri, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Azama, Hayato, Hinata, Kaden, Ryoma, Saizo, Subaki, Takumi, Arthur, Odin, Avatar, Jakob, Kaze, Silas", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Reina, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.MorbidCelebration), StartingClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClassB = classes.GetClassByClassName(ClassNames.Ninja), InheritanceA = classes.GetClassByClassName(ClassNames.WyvernRider), InheritanceB = classes.GetClassByClassName(ClassNames.DarkMage), FriendshipSupportList = "Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Avatar", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Kaden, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Reciprocity), StartingClass = classes.GetClassByClassName(ClassNames.Kitsune), AlternateClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Apothecary), InheritanceB = classes.GetClassByClassName(ClassNames.DarkMage), AvailableChildName = CharacterNames.Selkie, AvailableChild = new Child(), FriendshipSupportList = "Azama, Hayato, Hinata, Keaton, Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Hinoka, Kagero, Oboro, Orochi, Rinkah, Sakura, Setsuna, Charlotte, Peri, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Selkie, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Playthings), StartingClass = classes.GetClassByClassName(ClassNames.Kitsune), AlternateClass = classes.GetClassByClassName(ClassNames.Diviner), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Apothecary), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Kaden, PrimaryParent = new Parent(), FriendshipSupportList = "Rhajat, Velouria, Avatar, Kana, Midori", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Asugi, Hisame, Kiragi, Shiro, Forrest, Ignatius, Avatar, Kana, Dwyer, Shigure", RomanticSupports = new List<Character>() });
            list.Add(new Parent { Name = CharacterNames.Ryoma, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Bushido), StartingClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClass = classes.GetClassByClassName(ClassNames.SkyKnight), AlternateClassB = new BaseClass(), InheritanceA = classes.GetClassByClassName(ClassNames.Mercenary), InheritanceB = classes.GetClassByClassName(ClassNames.WyvernRider), AvailableChildName = CharacterNames.Shiro, AvailableChild = new Child(), FriendshipSupportList = "Takumi, Saizo, Xander, Avatar, Silas", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Hana, Kagero, Oboro, Orochi, Rinkah, Setsuna, Camilla, Elise, Avatar, Azura, Felicia, Mozu", RomanticSupports = new List<Character>() });
            list.Add(new Child { Name = CharacterNames.Shiro, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.NobleCause), StartingClass = classes.GetClassByClassName(ClassNames.SpearFighter), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = new BaseClass(), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), PrimaryParentName = CharacterNames.Ryoma, PrimaryParent = new Parent(), FriendshipSupportList = "Asugi, Kiragi, Siegbert, Avatar, Kana", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Caeldori, Mitama, Rhajat, Selkie, Nina, Ophelia, Avatar, Kana, Midori, Sophie", RomanticSupports = new List<Character>() });
            list.Add(new Character { Name = CharacterNames.Yukimura, AvailableOn = Path.Hoshido, PersonalSkill = classes.GetSkillByName(SkillNames.Perspicacious), StartingClass = classes.GetClassByClassName(ClassNames.Apothecary), AlternateClass = classes.GetClassByClassName(ClassNames.Samurai), AlternateClassB = classes.GetClassByClassName(ClassNames.Monk), InheritanceA = new BaseClass(), InheritanceB = new BaseClass(), FriendshipSupportList = "Avatar", FriendshipSupports = new List<Character>(), RomanticSupportsList = "Avatar", RomanticSupports = new List<Character>() });

            characters = list;
        }        
    }
}